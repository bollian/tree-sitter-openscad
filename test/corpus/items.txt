================================================================================
Basic Items
================================================================================
use <no_semi_file.scad>
include <no_semi_file.scad>
use <other_file.scad>;
include <other_file.scad>;
use <multiline
valid.scad>;

/* [Tweaks for My Model] some extra comments */
my_parameter = 10;

// [This is not a Customizer Group]
another_parameter = false;

function square(x) = x * x;

module my_cylinder(r, height = square(4), $fn = 100)
  cylinder(r = r, h = height);

module big_module() {}

function comma0(,) = 0;
function comma1(x,) = 0;
module comma0(,) {}
module comma1(x,) {}
--------------------------------------------------------------------------------

(source_file
      (use_statement
        (include_path))
      (include_statement
        (include_path))
      (use_statement
        (include_path))
      (include_statement
        (include_path))
      (use_statement
        (include_path))
      (comment)
      (assignment
        (identifier)
        (number
          (decimal)))
      (comment)
      (assignment
        (identifier)
        (boolean))
      (function_declaration
        (identifier)
        (parameters_declaration
          (parameter
            (identifier)))
        (binary_expression
          (identifier)
          (identifier)))
      (module_declaration
        (identifier)
        (parameters_declaration
          (parameter
            (identifier))
          (assignment
            (identifier)
            (function_call
              (identifier)
              (arguments
                (number
                  (decimal)))))
          (assignment
            (special_variable
			  (identifier))
            (number
              (decimal))))
        (transform_chain
          (module_call
            (identifier)
            (arguments
              (assignment
                (identifier)
                (identifier))
              (assignment
                (identifier)
                (identifier))))))
      (module_declaration
        (identifier)
        (parameters_declaration)
        (union_block))
      (function_declaration
        (identifier)
        (parameters_declaration)
        (number
          (decimal)))
      (function_declaration
        (identifier)
        (parameters_declaration
          (parameter
            (identifier)))
        (number
          (decimal)))
      (module_declaration
        (identifier)
        (parameters_declaration)
        (union_block))
      (module_declaration
        (identifier)
        (parameters_declaration
          (parameter
            (identifier)))
        (union_block)))

================================================================================
Nested Items
================================================================================
module big_module() {
  function inner_function() = undef;
  module inner_module() cube();
}

module extern_module() include <other_file.scad>

--------------------------------------------------------------------------------

(source_file
  (module_declaration
    name: (identifier)
    parameters: (parameters_declaration)
    body: (union_block
      (function_declaration
        name: (identifier)
        parameters: (parameters_declaration)
        (undef))
      (module_declaration
        name: (identifier)
        parameters: (parameters_declaration)
        body: (transform_chain
          (module_call
            name: (identifier)
            arguments: (arguments))))))
  (module_declaration
    name: (identifier)
    parameters: (parameters_declaration)
    body: (include_statement
      (include_path))))

================================================================================
Comments
================================================================================
/* ignored [Customizer Group] ignored */
my_parameter = 5;

function math(x) = /*do math stuff*/ x + 2 // done with math
;

module my_cylinder() {
  // here we create a cylinder
  cylinder(); /* done ! */
  cube();
}
--------------------------------------------------------------------------------

(source_file
      (comment)
      (assignment
        (identifier)
        (number
          (decimal)))
      (function_declaration
        (identifier)
        (parameters_declaration
          (parameter
            (identifier)))
        (comment)
        (binary_expression
          (identifier)
          (number
            (decimal))))
      (comment)
      (module_declaration
        (identifier)
        (parameters_declaration)
        (union_block
          (comment)
          (transform_chain
            (module_call
              (identifier)
              (arguments)))
          (comment)
          (transform_chain
            (module_call
              (identifier)
              (arguments)))))) 
